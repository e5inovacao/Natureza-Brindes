const { supabaseAdmin } = require('./supabase/server.ts');

async function checkPolicies() {
  try {
    console.log('üîç Testando inser√ß√£o na tabela itens_orcamento_sistema...');
    
    // Verificar se existem produtos ecol√≥gicos
    console.log('\nüì¶ Verificando produtos ecol√≥gicos...');
    const { data: produtos, error: prodError } = await supabaseAdmin
      .from('produtos_ecologicos')
      .select('id, nome, preco')
      .limit(5);
    
    if (prodError) {
      console.error('‚ùå Erro ao buscar produtos:', prodError);
    } else {
      console.log('‚úÖ Produtos encontrados:', produtos?.length || 0);
      if (produtos && produtos.length > 0) {
        console.log('Primeiro produto:', produtos[0]);
      }
    }
    

    
    // Primeiro, buscar um or√ßamento existente
    const { data: orcamentos, error: orcError } = await supabaseAdmin
      .from('orcamentos_sistema')
      .select('id')
      .limit(1);
    
    if (orcError || !orcamentos || orcamentos.length === 0) {
      console.log('‚ö†Ô∏è Nenhum or√ßamento encontrado para teste. Criando um or√ßamento de teste...');
      
      // Primeiro criar um usu√°rio de teste
      const { data: usuario, error: userError } = await supabaseAdmin
        .from('usuarios_cliente')
        .select('id')
        .limit(1)
        .single();
      
      if (userError || !usuario) {
        console.error('‚ùå Nenhum usu√°rio encontrado para teste:', userError);
        return;
      }
      
      const { data: newOrcamento, error: createError } = await supabaseAdmin
        .from('orcamentos_sistema')
        .insert({
          usuario_id: usuario.id,
          observacoes: 'Teste de inser√ß√£o manual',
          status: 'pendente',
          valor_total: 0
        })
        .select('id')
        .single();
      
      if (createError) {
        console.error('‚ùå Erro ao criar or√ßamento de teste:', createError);
        return;
      }
      
      console.log('‚úÖ Or√ßamento de teste criado:', newOrcamento.id);
      
      // Testar inser√ß√£o de item
      const { data: item, error: itemError } = await supabaseAdmin
        .from('itens_orcamento_sistema')
        .insert({
          orcamento_id: newOrcamento.id,
          produto_ecologico_id: 1, // ID de teste
          quantidade: 1,
          observacoes: 'Item de teste manual',
          preco_unitario: 10.00
        })
        .select()
        .single();
      
      if (itemError) {
        console.error('‚ùå Erro ao inserir item de teste:', itemError);
      } else {
        console.log('‚úÖ Item inserido com sucesso:', item);
      }
    } else {
      console.log('üìã Or√ßamento existente encontrado:', orcamentos[0].id);
      
      // Testar inser√ß√£o de item
      const { data: item, error: itemError } = await supabaseAdmin
        .from('itens_orcamento_sistema')
        .insert({
          orcamento_id: orcamentos[0].id,
          produto_ecologico_id: 1, // ID de teste
          quantidade: 1,
          observacoes: 'Item de teste manual',
          preco_unitario: 10.00
        })
        .select()
        .single();
      
      if (itemError) {
        console.error('‚ùå Erro ao inserir item de teste:', itemError);
      } else {
        console.log('‚úÖ Item inserido com sucesso:', item);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

checkPolicies().then(() => {
  console.log('\n‚úÖ Verifica√ß√£o conclu√≠da.');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå Erro na verifica√ß√£o:', error);
  process.exit(1);
});