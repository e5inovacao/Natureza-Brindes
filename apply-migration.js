// Script para aplicar a migra√ß√£o fix_ensure_client_function.sql manualmente
import { supabaseAdmin } from './supabase/server.ts';

async function applyMigration() {
  try {
    console.log('üîß Aplicando migra√ß√£o para corrigir ensure_client_exists...');
    
    // Vamos testar diretamente se conseguimos acessar a tabela usuarios_clientes (plural)
    console.log('1Ô∏è‚É£ Verificando se a tabela usuarios_clientes existe...');
    const { data: existingUsers, error: tableError } = await supabaseAdmin
      .from('usuarios_clientes')
      .select('*')
      .limit(1);
    
    if (tableError) {
      console.error('‚ùå Erro ao acessar tabela usuarios_clientes:', tableError);
      return;
    }
    
    console.log('‚úÖ Tabela usuarios_clientes acess√≠vel');
    console.log('üìã Usu√°rios existentes:', existingUsers?.length || 0);
    
    // Agora vamos tentar inserir um usu√°rio teste para ver qual erro espec√≠fico ocorre
    console.log('2Ô∏è‚É£ Testando inser√ß√£o com email...');
    const testEmail = `teste_${Date.now()}@email.com`;
    
    const { data: insertData, error: insertError } = await supabaseAdmin
      .from('usuarios_clientes')
      .insert({
        nome: 'Teste Usuario',
        email: testEmail,
        telefone: '(11) 99999-9999',
        empresa: 'Teste Empresa'
      })
      .select()
      .single();
    
    let hasEmailColumn = true;
    
    if (insertError) {
      console.error('‚ùå Erro ao inserir usu√°rio teste:', insertError);
      if (insertError.message && insertError.message.includes('email')) {
        hasEmailColumn = false;
        console.log('‚ö†Ô∏è Confirmado: A coluna email n√£o existe na tabela usuarios_clientes!');
      }
    } else {
      console.log('‚úÖ Usu√°rio teste inserido com sucesso:', insertData.id);
      
      // Limpar o usu√°rio teste
      await supabaseAdmin
        .from('usuarios_cliente')
        .delete()
        .eq('id', insertData.id);
      
      console.log('üßπ Usu√°rio teste removido');
    }
    
    if (!hasEmailColumn) {
      console.log('‚ö†Ô∏è Coluna email n√£o existe. Isso explica o erro!');
      console.log('üí° A tabela usuarios_clientes precisa da coluna email para funcionar corretamente.');
      console.log('üîß Voc√™ precisa executar manualmente no Supabase SQL Editor:');
      console.log('   ALTER TABLE usuarios_clientes ADD COLUMN email VARCHAR(255);');
      console.log('   CREATE UNIQUE INDEX usuarios_clientes_email_idx ON usuarios_clientes(email) WHERE email IS NOT NULL;');
    } else {
      console.log('‚úÖ Coluna email j√° existe!');
    }
    
    
    // Verificar se a fun√ß√£o ensure_client_exists existe
    console.log('3Ô∏è‚É£ Verificando fun√ß√£o ensure_client_exists...');
    
    if (hasEmailColumn) {
      console.log('‚úÖ Coluna email confirmada como existente!');
      
      // Testar a fun√ß√£o ensure_client_exists se ela existir
      try {
        const { data: functionResult, error: functionError } = await supabaseAdmin
          .rpc('ensure_client_exists', {
            p_email: testEmail,
            p_nome: 'Teste Usuario',
            p_telefone: '(11) 99999-9999',
            p_empresa: 'Teste Empresa'
          });
        
        if (functionError) {
          console.error('‚ùå Erro ao testar fun√ß√£o ensure_client_exists:', functionError);
        } else {
          console.log('‚úÖ Fun√ß√£o ensure_client_exists funcionando:', functionResult);
        }
      } catch (error) {
        console.log('‚ö†Ô∏è Fun√ß√£o ensure_client_exists n√£o existe ou tem erro:', error.message);
      }
    }
    
    console.log('\nüìã RESUMO:');
    console.log(`   - Coluna email: ${hasEmailColumn ? '‚úÖ Existe' : '‚ùå N√£o existe'}`);
    console.log(`   - Fun√ß√£o ensure_client_exists: ${functionInfo && functionInfo.length > 0 ? '‚úÖ Existe' : '‚ùå N√£o existe'}`);
    
    if (!hasEmailColumn) {
      console.log('\nüö® A√á√ÉO NECESS√ÅRIA:');
      console.log('   1. Acesse o Supabase Dashboard');
      console.log('   2. V√° para SQL Editor');
      console.log('   3. Execute o conte√∫do do arquivo: supabase/migrations/fix_ensure_client_function.sql');
    }
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error);
  }
}

applyMigration();